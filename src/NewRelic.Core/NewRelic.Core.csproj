<Project Sdk="Microsoft.NET.Sdk" ToolsVersion="15.0">
    <PropertyGroup>
        <TargetFrameworks>net45;netstandard2.0</TargetFrameworks>
        <AssemblyName>NewRelic.Core</AssemblyName>
        <RootNamespace>NewRelic.Core</RootNamespace>
        <SignAssembly>true</SignAssembly>
        <AssemblyOriginatorKeyFile>$(SolutionDir)KeyFile.snk</AssemblyOriginatorKeyFile>
        <description>NewRelic generic libraries</description>
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
        <IntermediateOutputPath>$(MSBuildThisFileDirectory)\..\_build\$(Platform)-$(Configuration)\$(AssemblyName)\</IntermediateOutputPath>
        <OutputPath>$(MSBuildThisFileDirectory)\..\_build\$(Platform)-$(Configuration)\$(AssemblyName)\</OutputPath>
    </PropertyGroup>
    <ItemGroup>
      <PackageReference Include="ILRepack" Version="2.0.16" />
      <PackageReference Include="Newtonsoft.Json" Version="11.0.2" />
      <PackageReference Include="System.Diagnostics.DiagnosticSource" Version="4.6.0" />
    </ItemGroup>
    <ItemGroup Condition="'$(TargetFramework)' == 'net45'">
        <Reference Include="System" />
        <Reference Include="System.configuration" />
        <Reference Include="System.Core" />
        <Reference Include="System.Web" />
        <Reference Include="System.Xml.Linq" />
        <Reference Include="System.Data.DataSetExtensions" />
        <Reference Include="System.Data" />
        <Reference Include="System.Xml" />
    </ItemGroup>
    <Import Project="$(SolutionDir)build\NewRelic.Agent.proj" Condition="Exists('$(SolutionDir)build\NewRelic.Agent.proj')" />
  
  <Target Name="ILRepack" AfterTargets="Build" Condition="'$(TargetFramework)' != ''">
    <ItemGroup>
      <PossibleRefsForILRepack Include="$(OutputPath)*.dll" />
    </ItemGroup>
    
	<ItemGroup Condition="'$(TargetFramework)' == 'net45'">
      <ILRepackInclude Include="@(PossibleRefsForILRepack)" Condition="'%(FileName)' == 'Newtonsoft.Json'" />
    </ItemGroup>

    <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
      <ILRepackInclude Include="@(PossibleRefsForILRepack)" Condition="'%(FileName)' == 'Newtonsoft.Json'" />
    </ItemGroup>
	
    <PropertyGroup>
      <ILRepackIncludeCount Condition="'$(TargetFramework)' == 'net45'">1</ILRepackIncludeCount>
      <ILRepackIncludeCount Condition="'$(TargetFramework)' == 'netstandard2.0'">1</ILRepackIncludeCount>
    </PropertyGroup>
    
    <Error Text="ILRepack of $(AssemblyName) ($(TargetFramework)) failed. A dependency is missing. Expected $(ILRepackIncludeCount) dependencies but found @(ILRepackInclude-&gt;Count())." Condition="@(ILRepackInclude-&gt;Count()) != $(ILRepackIncludeCount)" />

    <ItemGroup>
      <ILRepackExclude Include="@(PossibleRefsForILRepack)" Exclude="@(ILRepackInclude)" />
    </ItemGroup>

    <Message Importance="High" Text="ILRepack Include: %(ILRepackInclude.FullPath)" />
    <Message Importance="High" Text="ILRepack Exclude: %(ILRepackExclude.FullPath)" />

    <PropertyGroup>
      <ILRepackSearchDirOutputPath>$([System.String]::new("$(OutputPath)").Trim('\'))</ILRepackSearchDirOutputPath>
    </PropertyGroup>

    <PropertyGroup>
      <ILRepackCommand>"$(ILRepack)" --parallel --internalize --norepackres --keepotherversionreferences --keyfile:"$(AssemblyOriginatorKeyFile)" --lib:"$(ILRepackSearchDirOutputPath)" --out:"$(OutputPath)..\$(TargetFramework)-ILRepacked\$(AssemblyName).dll" "$(TargetPath)" "@(ILRepackInclude, '" "')"</ILRepackCommand>
    </PropertyGroup>

    <Message Importance="High" Text="Executing ILRepack.exe for $(TargetFramework) build: $(ILRepackCommand)" />
    <Exec Command="$(ILRepackCommand)" />
  </Target>
  
</Project>
