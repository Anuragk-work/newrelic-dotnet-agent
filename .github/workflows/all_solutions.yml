name: .NET Agent All Solutions Build

# Does not run on PUSH since we have already ran all the test
on:
  workflow_dispatch:

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  scripts_path: ${{ github.workspace }}\build\scripts
  tools_path: ${{ github.workspace }}\build\Tools
  DOTNET_NOLOGO: true

jobs:

  build-windows-profiler:
    name: Build Windows Profiler
    runs-on: windows-2019

    env:
      profiler_path: ${{ github.workspace }}\src\Agent\NewRelic\Profiler
      profiler_solution_path: ${{ github.workspace }}\src\Agent\NewRelic\Profiler\NewRelic.Profiler.sln
      output_path: ${{ github.workspace }}\src\Agent\_profilerBuild

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Cache Windows Profiler
        id: cache-windows-profiler
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/src/Agent/_profilerBuild/x86-Release/**/*
            ${{ github.workspace }}/src/Agent/_profilerBuild/x64-Release/**/*
          key: multiverse-${{ hashFiles('**/src/Agent/NewRelic/Profiler') }}

      - name: Add msbuild to PATH
        if: steps.cache-windows-profiler.outputs.cache-hit != 'true'
        uses: microsoft/setup-msbuild@v1

      - name: Clean out _profilerBuild directory
        if: steps.cache-windows-profiler.outputs.cache-hit != 'true'
        run: |
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\*.*" -Force -ErrorAction SilentlyContinue
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\x64-Release" -Recurse -Force  -ErrorAction SilentlyContinue
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\x86-Release" -Recurse -Force  -ErrorAction SilentlyContinue
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\linux-x64-release" -Recurse -Force  -ErrorAction SilentlyContinue
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\linux-arm64-release" -Recurse -Force  -ErrorAction SilentlyContinue
        shell: powershell

      - name: Build x64
        if: steps.cache-windows-profiler.outputs.cache-hit != 'true'
        run: |
          Write-Host "List NuGet Sources"
          dotnet nuget list source # For unknown reasons, this step is necessary to avoid subsequent problems with NuGet package restore
          Write-Host "MSBuild.exe -restore -m -p:Platform=x64 -p:Configuration=Release ${{ env.profiler_solution_path }}"
          MSBuild.exe -restore -m -p:Platform=x64 -p:Configuration=Release ${{ env.profiler_solution_path }}
        shell: powershell
        
      - name: Build x86
        if: steps.cache-windows-profiler.outputs.cache-hit != 'true'
        run: |
          Write-Host "MSBuild.exe -restore -m -p:Platform=Win32 -p:Configuration=Release ${{ env.profiler_solution_path }}"
          MSBuild.exe -restore -m -p:Platform=Win32 -p:Configuration=Release ${{ env.profiler_solution_path }}
        shell: powershell

  build-linux-x64-profiler:
    name: Build Linux x64 Profiler
    runs-on: ubuntu-18.04

    env:
      profiler_path: ${{ github.workspace }}/src/Agent/NewRelic/Profiler
      #<other env vars here>

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Cache Linux-x64 Profiler
        id: cache-linux-x64-profiler
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/src/Agent/_profilerBuild/linux-x64-release/**/*
          key: multiverse-${{ hashFiles('**/src/Agent/NewRelic/Profiler') }}

      - name: Clean out _profilerBuild directory
        if: steps.cache-linux-x64-profiler.outputs.cache-hit != 'true'
        run: |
          rm -f ${{ github.workspace }}/src/Agent/_profilerBuild/*.* || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/linux-x64-release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/linux-arm64-release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/x64-Release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/x86-Release || true
        shell: bash

      - name: Build Linux Profler
        if: steps.cache-linux-x64-profiler.outputs.cache-hit != 'true'
        run: |
          cd ${{ env.profiler_path }}
          docker-compose build build
          docker-compose run build
        shell: bash

      - name: Move Profiler to staging folder
        if: steps.cache-linux-x64-profiler.outputs.cache-hit != 'true'
        run: |
          mkdir --parents ${{ github.workspace }}/src/Agent/_profilerBuild/linux-x64-release/
          mv -f ${{ env.profiler_path }}/libNewRelicProfiler.so  ${{ github.workspace }}/src/Agent/_profilerBuild/linux-x64-release/libNewRelicProfiler.so
        shell: bash

  build-linux-arm64-profiler:
    name: Build Linux ARM64 Profiler
    runs-on: ubuntu-18.04
    
    env:
      profiler_path: ${{ github.workspace }}/src/Agent/NewRelic/Profiler
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Linux-ARM64 Profiler
        id: cache-linux-arm64-profiler
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/src/Agent/_profilerBuild/linux-arm64-release/**/*
          key: multiverse-${{ hashFiles('**/src/Agent/NewRelic/Profiler') }}
      
      - name: Clean out _profilerBuild directory
        if: steps.cache-linux-arm64-profiler.outputs.cache-hit != 'true'
        run: |
          rm -f ${{ github.workspace }}/src/Agent/_profilerBuild/*.* || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/linux-x64-release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/linux-arm64-release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/x64-Release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/x86-Release || true
        shell: bash
        
      - name: Build Linux Profler
        if: steps.cache-linux-arm64-profiler.outputs.cache-hit != 'true'
        uses: uraimo/run-on-arch-action@v2.0.5
        with:
          arch: aarch64
          distro: ubuntu18.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update -q -y
            apt-get install -q -y wget curl git dos2unix software-properties-common make binutils libc++-dev clang-3.9 lldb-3.9 build-essential
            echo "deb https://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.9 main" | tee /etc/apt/sources.list.d/llvm.list
            wget --no-cache --no-cookies -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
            mkdir /root/git
            cd /root/git
            git clone --branch release/3.0 https://github.com/dotnet/coreclr.git
            curl -sSL https://virtuoso-testing.s3.us-west-2.amazonaws.com/cmake-3.9.0-rc3-aarch64.tar.gz | tar -xzC ~
            chmod 777 ~/cmake-3.9.0-rc3-aarch64/bin/cmake
            ln -s ~/cmake-3.9.0-rc3-aarch64/bin/cmake /usr/bin/cmake || true
            rm /usr/bin/cc || true
            ln -s /usr/bin/clang-3.9 /usr/bin/cc
            rm /usr/bin/c++ || true
            ln -s /usr/bin/clang++-3.9 /usr/bin/c++
          dockerRunArgs: |
            --volume "${{ env.profiler_path }}:/profiler"
          run: |
            cd /profiler
            chmod 777 ./linux/build_profiler.sh
            ./linux/build_profiler.sh
            
      - name: Move Profiler to staging folder
        if: steps.cache-linux-arm64-profiler.outputs.cache-hit != 'true'
        run: |
          mkdir --parents ${{ github.workspace }}/src/Agent/_profilerBuild/linux-arm64-release/
          mv -f ${{ env.profiler_path }}/libNewRelicProfiler.so  ${{ github.workspace }}/src/Agent/_profilerBuild/linux-arm64-release/libNewRelicProfiler.so
        shell: bash

  # This builds both FullAgent and MSIInstaller since MSIInstaller requires FullAgent artifacts.
  build-test-fullagent-msi:
    needs: [ build-windows-profiler, build-linux-x64-profiler, build-linux-arm64-profiler ]
    name: Build and Test FullAgent and MSIInstaller
    runs-on: windows-2019

    env:
      fullagent_solution_path: ${{ github.workspace }}\FullAgent.sln
      msi_solution_path: ${{ github.workspace }}\src\Agent\MsiInstaller\MsiInstaller.sln

    outputs:
      agentVersion: ${{ steps.agentVersion.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1

      - name: Setup VSTest Path
        uses: darenm/Setup-VSTest@v1

      - name: Clean out _profilerBuild directory
        run: |
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\*.*" -Force -ErrorAction SilentlyContinue
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\x64-Release" -Recurse -Force  -ErrorAction SilentlyContinue
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\x86-Release" -Recurse -Force  -ErrorAction SilentlyContinue
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\linux-x64-release" -Recurse -Force  -ErrorAction SilentlyContinue
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\linux-arm64-release" -Recurse -Force  -ErrorAction SilentlyContinue
        shell: powershell

      - name: Cache Windows Profiler
        id: cache-windows-profiler
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/src/Agent/_profilerBuild/x86-Release/**/*
            ${{ github.workspace }}/src/Agent/_profilerBuild/x64-Release/**/*
          key: multiverse-${{ hashFiles('**/src/Agent/NewRelic/Profiler') }}

      - name: Cache Linux-x64 Profiler
        id: cache-linux-x64-profiler
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/src/Agent/_profilerBuild/linux-x64-release/**/*
          key: multiverse-${{ hashFiles('**/src/Agent/NewRelic/Profiler') }}

      - name: Cache Linux-ARM64 Profiler
        id: cache-linux-arm64-profiler
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/src/Agent/_profilerBuild/linux-arm64-release/**/*
          key: multiverse-${{ hashFiles('**/src/Agent/NewRelic/Profiler') }}

      - name: Build FullAgent.sln
        run: |
          Write-Host "List NuGet Sources"
          dotnet nuget list source # For unknown reasons, this step is necessary to avoid subsequent problems with NuGet package restore
          Write-Host "MSBuild.exe -restore -m -p:Configuration=Release -p:AllowUnsafeBlocks=true ${{ env.fullagent_solution_path }}"
          MSBuild.exe -restore -m -p:Configuration=Release -p:AllowUnsafeBlocks=true ${{ env.fullagent_solution_path }}
        shell: powershell

      - name: Create agentVersion
        id: agentVersion
        run: |
          $agentVersion = (Get-Item "${{ github.workspace }}\src\_build\AnyCPU-Release\NewRelic.Agent.Core\net45\NewRelic.Agent.Core.dll").VersionInfo.FileVersion
          Write-Host "::set-output name=version::$agentVersion"
        shell: powershell

  run-multiverse_testing_suite:
    needs: build-test-fullagent-msi
    if: ${{ github.event.release }}
    uses: jaffinito/newrelic-dotnet-agent/.github/workflows/multiverse_run.yml@main
    with:
      agentVersion: ${{ needs.build-test-fullagent-msi.outputs.agentVersion }}
